let e=document.createElement("style");e.innerHTML=".demo-tabs>.el-tabs__content,.demo-tabs>.ht-tabs__content{padding:32px;color:#6b778c;font-size:32px;font-weight:600}",document.head.appendChild(e);import{g as a,q as t,o as n,j as l,w as r,b as o,d as s,r as d,a as b,u as c,s as p,c as u,h as i,F as m}from"./index.6e1d6788.js";var f=a({__name:"TabsBasic",setup(e){const a=t("first"),b=(e,a)=>{console.log(e,a)};return(e,t)=>{const c=d("ht-tab-pane"),p=d("ht-tabs");return n(),l(p,{modelValue:a.value,"onUpdate:modelValue":t[0]||(t[0]=e=>a.value=e),class:"demo-tabs",onTabClick:b},{default:r((()=>[o(c,{label:"User",name:"first"},{default:r((()=>[s("User")])),_:1}),o(c,{label:"Config",name:"second"},{default:r((()=>[s("Config")])),_:1}),o(c,{label:"Role",name:"third"},{default:r((()=>[s("Role")])),_:1}),o(c,{label:"Task",name:"fourth"},{default:r((()=>[s("Task")])),_:1})])),_:1},8,["modelValue"])}}});function h(e){e.__sourceCode='<template>\r\n  <ht-tabs v-model="activeName" class="demo-tabs" @tab-click="handleClick">\r\n    <ht-tab-pane label="User" name="first">User</ht-tab-pane>\r\n    <ht-tab-pane label="Config" name="second">Config</ht-tab-pane>\r\n    <ht-tab-pane label="Role" name="third">Role</ht-tab-pane>\r\n    <ht-tab-pane label="Task" name="fourth">Task</ht-tab-pane>\r\n  </ht-tabs>\r\n</template>\r\n<script lang="ts" setup>\r\nimport { ref } from \'vue\'\r\n\r\nconst activeName = ref(\'first\')\r\nconst handleClick = (tab, event) => {\r\n  console.log(tab, event)\r\n}\r\n<\/script>\r\n<style>\r\n.demo-tabs > .ht-tabs__content {\r\n  padding: 32px;\r\n  color: #6b778c;\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n}\r\n</style>',e.__sourceCodeTitle=" 基础用法 "}h(f);var _={};const T=b("p",{class:"row"},"基础的、简洁的标签页。",-1),g=b("p",null,[s("Tabs 组件提供了选项卡功能， 默认选中第一个标签页，你也可以通过 "),b("code",null,"value"),s(" 属性来指定当前选中的标签页。")],-1);_.render=function(e,a,t,o,s,b){const c=d("desc-component");return n(),l(c,null,{default:r((()=>[T,g])),_:1})};var v=a({__name:"TabsCard",setup(e){const a=t("first"),b=(e,a)=>{console.log(e,a)};return(e,t)=>{const c=d("ht-tab-pane"),p=d("ht-tabs");return n(),l(p,{modelValue:a.value,"onUpdate:modelValue":t[0]||(t[0]=e=>a.value=e),type:"card",class:"demo-tabs",onTabClick:b},{default:r((()=>[o(c,{label:"User",name:"first"},{default:r((()=>[s("User")])),_:1}),o(c,{label:"Config",name:"second"},{default:r((()=>[s("Config")])),_:1}),o(c,{label:"Role",name:"third"},{default:r((()=>[s("Role")])),_:1}),o(c,{label:"Task",name:"fourth"},{default:r((()=>[s("Task")])),_:1})])),_:1},8,["modelValue"])}}});function C(e){e.__sourceCode='<template>\r\n  <ht-tabs\r\n    v-model="activeName"\r\n    type="card"\r\n    class="demo-tabs"\r\n    @tab-click="handleClick"\r\n  >\r\n    <ht-tab-pane label="User" name="first" >User</ht-tab-pane>\r\n    <ht-tab-pane label="Config" name="second">Config</ht-tab-pane>\r\n    <ht-tab-pane label="Role" name="third">Role</ht-tab-pane>\r\n    <ht-tab-pane label="Task" name="fourth">Task</ht-tab-pane>\r\n  </ht-tabs>\r\n</template>\r\n<script lang="ts" setup>\r\nimport { ref } from \'vue\'\r\n\r\nconst activeName = ref(\'first\')\r\n\r\nconst handleClick = (tab, event) => {\r\n  console.log(tab, event)\r\n}\r\n<\/script>\r\n<style>\r\n.demo-tabs > .el-tabs__content {\r\n  padding: 32px;\r\n  color: #6b778c;\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n}\r\n</style>',e.__sourceCodeTitle=" 卡片风格的标签 "}C(v);var k={};const U=b("p",{class:"row"},"你可以设置具有卡片风格的标签。",-1),y=b("p",null,[s("只需要设置 "),b("code",null,"type"),s(" 属性为 "),b("code",null,"card"),s(" 就可以使选项卡改变为标签风格。")],-1);function R(e){e.__sourceCode='<template>\r\n  <ht-tabs type="border-card">\r\n    <ht-tab-pane label="User" name="first">User</ht-tab-pane>\r\n    <ht-tab-pane label="Config" name="second">Config</ht-tab-pane>\r\n    <ht-tab-pane label="Role" name="third">Role</ht-tab-pane>\r\n    <ht-tab-pane label="Task" name="fourth">Task</ht-tab-pane>\r\n  </ht-tabs>\r\n</template>',e.__sourceCodeTitle=" 带有边框的卡片风格 "}k.render=function(e,a,t,o,s,b){const c=d("desc-component");return n(),l(c,null,{default:r((()=>[U,y])),_:1})};const x={};R(x),x.render=function(e,a){const t=d("ht-tab-pane"),b=d("ht-tabs");return n(),l(b,{type:"border-card"},{default:r((()=>[o(t,{label:"User",name:"first"},{default:r((()=>[s("User")])),_:1}),o(t,{label:"Config",name:"second"},{default:r((()=>[s("Config")])),_:1}),o(t,{label:"Role",name:"third"},{default:r((()=>[s("Role")])),_:1}),o(t,{label:"Task",name:"fourth"},{default:r((()=>[s("Task")])),_:1})])),_:1})};var w={};const V=b("p",{class:"row"},"你还可以设置标签页为带有边框的卡片",-1),N=b("p",null,[s("将 "),b("code",null,"type"),s(" 设置为 "),b("code",null,"border-card"),s("。")],-1);w.render=function(e,a,t,o,s,b){const c=d("desc-component");return n(),l(c,null,{default:r((()=>[V,N])),_:1})};var D=a({__name:"TabsDisabled",setup(e){let a=t("first");return(e,t)=>{const b=d("ht-tab-pane"),u=d("ht-tabs");return n(),l(u,{modelValue:c(a),"onUpdate:modelValue":t[0]||(t[0]=e=>p(a)?a.value=e:a=e),class:"demo-tabs"},{default:r((()=>[o(b,{label:"User",name:"first",disabled:!0},{default:r((()=>[s("User")])),_:1}),o(b,{label:"Config",name:"second"},{default:r((()=>[s("Config")])),_:1}),o(b,{label:"Role",name:"third"},{default:r((()=>[s("Role")])),_:1}),o(b,{label:"Task",name:"fourth",disabled:!0},{default:r((()=>[s("Task")])),_:1})])),_:1},8,["modelValue"])}}});function z(e){e.__sourceCode='<template>\r\n  <ht-tabs v-model="activeName" class="demo-tabs">\r\n    <ht-tab-pane label="User" name="first" :disabled="true">User</ht-tab-pane>\r\n    <ht-tab-pane label="Config" name="second">Config</ht-tab-pane>\r\n    <ht-tab-pane label="Role" name="third">Role</ht-tab-pane>\r\n    <ht-tab-pane label="Task" name="fourth" :disabled="true">Task</ht-tab-pane>\r\n  </ht-tabs>\r\n</template>\r\n<script lang="ts" setup>\r\nimport { ref } from \'vue\'\r\n\r\nlet activeName = ref(\'first\')\r\n<\/script>\r\n<style>\r\n.demo-tabs > .ht-tabs__content {\r\n  padding: 32px;\r\n  color: #6b778c;\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n}\r\n</style>',e.__sourceCodeTitle=" disabled禁用 "}z(D);var j={};const A=b("p",{class:"row"},"你可以设置卡片具有禁用状态。",-1),E=b("p",null,[s("只需要设置 "),b("code",null,"disabled"),s(" 属性为 "),b("code",null,"true"),s(" 就可以使选项卡改变为禁用。")],-1);j.render=function(e,a,t,o,s,b){const c=d("desc-component");return n(),l(c,null,{default:r((()=>[A,E])),_:1})};const P=b("h1",null,"Tabs 标签页",-1);var q=a({__name:"TabsDemo",setup(e){const a=["属性名","说明","类型","可选值","默认值"],t=[["v-model","绑定值，选中选项卡中的name","string/number","","第一个选项卡的name值"],["type","风格类型","string","card/border-card",""]],l=["事件名","说明","回调参数"],r=[["tab-click","tab被选中时触发","(pane: TabsPaneContext, ev: Event)"],["tab-change","<code>activeName</code> 改变时触发","(name: TabPaneName)"]],s=["属性名","说明","类型","可选值","默认值"],b=[["label","选项卡标题","string","",""],["disabled","是否禁用","boolean","","false"],["name","与选项卡绑定值 value 对应的标识符，表示选项卡别名","string / number","",""]],c=["插槽名","说明"],p=[["","Tab-pane 的内容"],["label","Tab-pane 的标题内容"]];return(e,h)=>{const T=d("Demo"),g=d("Api");return n(),u(m,null,[P,i(" 基本用法 "),o(T,{component:f,"desc-component":_}),i(" card卡片风格 "),o(T,{component:v,"desc-component":k}),i(" border-card卡片风格 "),o(T,{component:x,"desc-component":w}),i(" disabled禁用 "),o(T,{component:D,"desc-component":j}),i(" Api属性 "),o(g,{title:"Tabs属性",theads:a,bodyData:t}),i(" Tabs事件 "),o(g,{title:"Tabs事件",theads:l,bodyData:r}),i(" Tabs-pane属性 "),o(g,{title:"Tabs属性",theads:s,bodyData:b}),i(" Tabs-pane插槽 "),o(g,{title:"Tab-pane 插槽",theads:c,bodyData:p})],64)}}});export{q as default};
