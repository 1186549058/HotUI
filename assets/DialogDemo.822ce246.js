import{g as o,q as e,o as n,c as l,b as t,w as c,d as s,F as a,a as r,r as d,h as i}from"./index.6e1d6788.js";const g=r("span",null,"This is message",-1);var u=o({__name:"DialogBasic",setup(o){const r=e(!1),i=o=>{o()},u=()=>{console.log("关闭了")},b=()=>{console.log("打开了")},p=()=>{console.log("打开动画结束回调")},m=()=>{console.log("关闭动画结束后的回调")};return(o,e)=>{const D=d("ht-button"),f=d("ht-dialog");return n(),l(a,null,[t(f,{title:"标题",visible:r.value,"onUpdate:visible":e[2]||(e[2]=o=>r.value=o),"before-close":i,draggable:"",onClose:u,onOpen:b,onOpend:p,onClosed:m,"close-on-click-modal":!0,"custom-class":"my-dialog"},{footer:c((()=>[t(D,{onClick:e[0]||(e[0]=o=>r.value=!1)},{default:c((()=>[s("Cancel")])),_:1}),t(D,{onClick:e[1]||(e[1]=o=>r.value=!1),type:"primary"},{default:c((()=>[s("Ok")])),_:1})])),default:c((()=>[g])),_:1},8,["visible"]),t(D,{onClick:e[3]||(e[3]=o=>r.value=!0)},{default:c((()=>[s("toggle")])),_:1})],64)}}});function b(o){o.__sourceCode='<template>\r\n    <ht-dialog  title="标题" :visible="visible" \r\n    @update:visible="visible = $event" \r\n    :before-close="before" \r\n    draggable\r\n    @close="fn" \r\n    @open="open"\r\n    @opend="opend"\r\n    @closed="closed"\r\n    :close-on-click-modal="true"\r\n    custom-class="my-dialog"\r\n    >\r\n      <span>This is message</span>\r\n      <template #footer>\r\n        <ht-button @click="visible=false">Cancel</ht-button>\r\n        <ht-button @click="visible=false" type="primary">Ok</ht-button>\r\n      </template>\r\n    </ht-dialog>\r\n    <ht-button @click="visible = true">toggle</ht-button>\r\n  \r\n  </template>\r\n  \r\n  <script lang="ts" setup>\r\n  import { ref } from "vue";\r\n      const visible = ref(false);\r\n      const before =(done)=>{\r\n        done()\r\n      }\r\n      const fn =()=>{\r\n        console.log(\'关闭了\');\r\n        \r\n      }\r\n      const open=()=>{\r\n        console.log(\'打开了\');\r\n        \r\n      }\r\n      const opend=()=>{\r\n        console.log(\'打开动画结束回调\');\r\n      }\r\n      const closed=()=>{\r\n        console.log(\'关闭动画结束后的回调\');\r\n      }\r\n  <\/script>',o.__sourceCodeTitle=" Dialog，弹出一个对话框 "}b(u);var p=o({__name:"DialogDemo",setup(o){const e=["事件名","说明","参数"],c=[["open","Dialog打开的回调",""],["opend","Dialog 打开动画结束时的回调",""],["close","Dialog 关闭的回调",""],["closed","Dialog 关闭动画结束时的回调",""]],s=["插槽名","说明"],r=[["","Dialog的内容"],["header","对话框标题的内容；会替换标题部分，但不会移除关闭按钮"],["footer","Dialog按钮操作区的内容"]],g=["属性名","说明","类型","可选值","默认值"],b=[["<code>visible</code>","是否显示Dialog","<code>boolean</code>","",""],["<code>width</code>","Dialog的宽度","<code>string/number</code> ","","30%"],["<code>title</code>","Dialog 对话框 Dialog 的标题","<code>string</code> ","",""],["<code>top</code>","\tDialog距离顶部的值","<code>string</code>","","15vh"],["<code>draggable</code>","为 Dialog 启用可拖拽功能\t","<code>boolean</code>","","false"],["<code>before-close</code>","\t关闭前的回调，会暂停 Dialog 的关闭. 回调函数内执行 done 参数方法的时候才是真正关闭对话框的时候.","<code>Function(done) (done 用来关闭 Dialog)</code>","",""],["<code>show-close</code>","是否显示关闭按钮\t","<code>boolean</code> ","","true"],["<code>close-on-press-escape</code>","是否可以通过按下 ESC 关闭 Dialog","<code>boolean</code> ","","true"],["<code>close-on-click-modal</code>","是否可以通过点击 遮罩层 关闭 Dialog","<code>boolean</code> ","","true"],["<code>custom-class</code>","Dialog 的自定义类名","<code>string</code> ","",""]];return(o,p)=>{const m=d("Demo"),D=d("Api");return n(),l(a,null,[i(" 基础用法 "),t(m,{component:u}),i(" Api属性 "),t(D,{title:"属性",theads:g,bodyData:b}),i(" 插槽 "),t(D,{title:"插槽",theads:s,bodyData:r}),i(" 事件 "),t(D,{title:"事件",theads:e,bodyData:c})],64)}}});export{p as default};
