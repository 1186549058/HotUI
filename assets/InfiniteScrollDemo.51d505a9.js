let n=document.createElement("style");n.innerHTML=".infinite-list{height:300px;padding:0;margin:0;list-style:none}.infinite-list .infinite-list-item{display:flex;align-items:center;justify-content:center;height:50px;background:var(--ht-color-primary-light-3);margin:10px;color:var(--ht-color-primary)}.infinite-list .infinite-list-item+.list-item{margin-top:10px}.infinite-list-wrapper{height:300px;text-align:center}.infinite-list-wrapper .list{padding:0;margin:0;list-style:none;height:100%}.infinite-list-wrapper .list-item{display:flex;align-items:center;justify-content:center;height:50px;background:var(--ht-message-error-bgcolor);color:var(--ht-message-error-color)}.infinite-list-wrapper .list-item+.list-item{margin-top:10px}",document.head.appendChild(n);import{g as i,q as e,k as t,o as r,c as l,F as s,m as o,y as a,t as c,z as p,u,h as f,r as d,j as m,w as g,a as v,d as y,b as h}from"./index.6e1d6788.js";const x={"infinite-scroll-immediate":!0,"infinite-scroll-distance":200,"infinite-scroll-delay":300,class:"infinite-list",style:{overflow:"auto"}};var b=i({__name:"InfiniteScrollBasic",setup(n){const i=e(5),p=()=>{i.value+=2};return(n,e)=>{const u=a("infinite-scroll");return t((r(),l("div",x,[(r(!0),l(s,null,o(i.value,(n=>(r(),l("li",{key:n,class:"infinite-list-item"},c(n),1)))),128))])),[[u,p]])}}});function w(n){n.__sourceCode='<template>\r\n  <div :infinite-scroll-immediate="true" :infinite-scroll-distance="200" :infinite-scroll-delay="300" v-infinite-scroll="load" class="infinite-list" style="overflow: auto">\r\n    <li v-for="i in count" :key="i" class="infinite-list-item">{{ i }}</li>\r\n  </div>\r\n</template>\r\n\r\n<script lang="ts" setup>\r\nimport { ref } from \'vue\'\r\nconst count = ref(5)\r\nconst load = () => {\r\n  count.value += 2\r\n}\r\n<\/script>\r\n\r\n<style>\r\n.infinite-list {\r\n  height: 300px;\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n}\r\n.infinite-list .infinite-list-item {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 50px;\r\n  background: var(--ht-color-primary-light-3);\r\n  margin: 10px;\r\n  color: var(--ht-color-primary);\r\n}\r\n.infinite-list .infinite-list-item + .list-item {\r\n  margin-top: 10px;\r\n}\r\n</style>',n.__sourceCodeTitle=" 基础用法 "}w(b);const _={class:"infinite-list-wrapper"},k=["infinite-scroll-disabled"],j={key:0},C={key:1};var T=i({__name:"InfiniteScrollDisabled",setup(n){const i=e(10),d=e(!1),m=p((()=>i.value>=20)),g=p((()=>d.value||m.value)),v=()=>{d.value=!0,setTimeout((()=>{i.value+=2,d.value=!1}),2e3)};return(n,e)=>{const p=a("infinite-scroll");return r(),l("div",_,[t((r(),l("ul",{style:{overflow:"auto"},class:"list","infinite-scroll-disabled":u(g)},[(r(!0),l(s,null,o(i.value,(n=>(r(),l("li",{key:n,class:"list-item"},c(n),1)))),128)),d.value?(r(),l("p",j,"Loading...")):f("v-if",!0),u(m)?(r(),l("p",C,"No more")):f("v-if",!0)],8,k)),[[p,v]])])}}});function D(n){n.__sourceCode='<template>\r\n  <div class="infinite-list-wrapper">\r\n    <ul\r\n      style="overflow: auto"\r\n      v-infinite-scroll="load"\r\n      class="list"\r\n      :infinite-scroll-disabled="disabled"\r\n    >\r\n      <li v-for="i in count" :key="i" class="list-item">{{ i }}</li>\r\n      <p v-if="loading">Loading...</p>\r\n      <p v-if="noMore">No more</p>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script lang="ts" setup>\r\nimport { computed, ref } from "vue";\r\n\r\nconst count = ref(10);\r\nconst loading = ref(false);\r\nconst noMore = computed(() => count.value >= 20);\r\nconst disabled = computed(() => loading.value || noMore.value);\r\nconst load = () => {\r\n    loading.value = true;\r\n    setTimeout(() => {\r\n      count.value += 2;\r\n      loading.value = false;\r\n    }, 2000);\r\n};\r\n<\/script>\r\n\r\n<style>\r\n.infinite-list-wrapper {\r\n  height: 300px;\r\n  text-align: center;\r\n}\r\n\r\n.infinite-list-wrapper .list {\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n  height: 100%;\r\n}\r\n\r\n.infinite-list-wrapper .list-item {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 50px;\r\n  background: var(--ht-message-error-bgcolor);\r\n  color: var(--ht-message-error-color);\r\n}\r\n.infinite-list-wrapper .list-item + .list-item {\r\n  margin-top: 10px;\r\n}\r\n</style>',n.__sourceCodeTitle=" 禁用加载 "}D(T);const I=v("p",{class:"row"},[y(" 在要实现滚动加载的列表上上添加"),v("code",null,"v-infinite-scroll"),y("，并赋值相应的加载方法，可实现滚动到底部时自动执行加载方法。 ")],-1);const M={render:function(n,i){const e=d("desc-component");return r(),m(e,null,{default:g((()=>[I])),_:1})}},S=v("h1",null,"Infinite Scroll 无限滚动",-1),L=v("p",null,"滚动至底部时，加载更多数据",-1);var N=i({__name:"InfiniteScrollDemo",setup(n){const i=["属性","说明","类型","可选值","默认值"],e=[["v-infinite-scroll","滚动到底部时，加载更多数据","function","",""],["infinite-scroll-disabled","\t是否禁用","boolean","","false"],["infinite-scroll-delay","节流时延，单位为ms","number ","","200"],["infinite-scroll-distance","\t触发加载的距离阈值，单位为px","number\t","","0"],["infinite-scroll-immediate","是否立即执行加载方法，以防初始状态下内容无法撑满容器。","boolean","","true"]];return(n,t)=>{const o=d("Demo"),a=d("Api");return r(),l(s,null,[S,L,f(" 基础用法 "),h(o,{component:b,"desc-component":M}),f(" 禁用状态 "),h(o,{component:T}),h(a,{title:"指令",theads:i,bodyData:e})],64)}}});export{N as default};
